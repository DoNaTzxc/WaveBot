from asyncio import tasks
from decimal import Inexact
from re import T
from turtle import rt
from unicodedata import category
import discord
from operator import index
from discord.ext import commands
from discord_components import DiscordComponents, ComponentsBot, Button, Select, Interaction
from discord_components import SelectOption as Sel
from discord.utils import get
from email.errors import InvalidMultipartContentTransferEncodingDefect
import asyncio
import json
from discord_components import ComponentsBot
import interactions
from interactions import TextInput, Modal, TextStyleType, SelectMenu, SelectOption, Option
from youtube_dl import YoutubeDL
import os
import discord
from discord_components import DiscordComponents, ComponentsBot, Button, Select, SelectOption, Interaction
import interactions
from interactions import Modal, TextInput
import json
import asyncio
from discord.ext import commands
from BTSET import Moderation, embpy, bdpy, BD
rtask = None
class Roomedit(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def command_room(self, ctx: commands.Context):
        stb_gld: discord.Guild = self.bot.get_guild(981511419042361344)
        emb = discord.Embed(title='***‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏***',
                            description='üëë - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã \n\
                            üóí - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å/–≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ \n\
                            üë• - –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ \n\
                            üîí - –∑–∞–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É \n\
                            ‚úèÔ∏è - –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã \n\
                            üëÅ‚Äçüó® - —Å–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É \n\
                            üö™ - –≤—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã \n\
                            üéô - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å/–≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–æ –≥–æ–≤–æ—Ä–∏—Ç—å',
                            color = Moderation(ctx.author).color)
        await ctx.send(embed=emb,
        components = [
            [
                Button(emoji=await stb_gld.fetch_emoji(1020971032309403758)),
                Button(emoji=await stb_gld.fetch_emoji(1020971040416993280)),
                Button(emoji=await stb_gld.fetch_emoji(1020971037741043713)),
                Button(emoji=await stb_gld.fetch_emoji(1020971036252053524))
            ],
            [
                Button(emoji=await stb_gld.fetch_emoji(1020971043856330782)),
                Button(emoji=await stb_gld.fetch_emoji(1020971035014746162)),
                Button(emoji=await stb_gld.fetch_emoji(1020971033756450866)),
                Button(emoji=await stb_gld.fetch_emoji(1020971039141920819))
            ]
    ]
    )
    
    
    #—Ç—É—Ç –≤—Å–µ –∏–¥–µ–∞–ª—å–Ω–µ–æ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å
    async def listener_on_voice_state_update_roomedit_move(self, member: discord.Member, before, after):
        try:
            with open(f'{BD}users.json', 'r') as file:
                data = json.load(file)
            role = bdpy(ctx=member)['FirstRole']
            if not(role in member.guild.roles):
                role = member.guild.roles[0]
            try:
                SelfRooms = data[str(before.channel.guild.id)]['Selfrooms']
                SelfRoom = int(data[str(before.channel.guild.id)]['selfRoom']["vc"])
            except:
                SelfRooms = data[str(after.channel.guild.id)]['Selfrooms']
                SelfRoom = int(data[str(after.channel.guild.id)]['selfRoom']["vc"])
            try:
                if after.channel.id == SelfRoom:
                    chlen = await after.channel.guild.create_voice_channel(name=f'{member.name}', category=[i for i in member.guild.categories if i.id == int(data[str(after.channel.guild.id)]['selfRoom']["ctp"])][0])
                    await member.move_to(chlen)
                    ow1 = discord.PermissionOverwrite()
                    ow1.connect = True
                    ow1.view_channel = True
                    await member.voice.channel.set_permissions(target=role, overwrite=ow1)
                    data[str(member.guild.id)]['Selfrooms'].update({
                        str(chlen.id): str(member.id)})
            except:
                if before.channel.id == SelfRoom:
                    chlen = await after.channel.guild.create_voice_channel(name=f'{member.name}', category=[i for i in member.guild.categories if i.id == int(data[str(after.channel.guild.id)]['selfRoom']["ctp"])][0])
                    await member.move_to(chlen)
                    ow1 = discord.PermissionOverwrite()
                    ow1.connect = True
                    ow1.view_channel = True
                    await member.voice.channel.set_permissions(target=role, overwrite=ow1)
                    data[str(member.guild.id)]['Selfrooms'].update({
                        str(chlen.id): str(member.id)})

            if before.channel.name in [i.name for i in before.channel.guild.voice_channels if i.id in [int(k) for k in SelfRooms.keys()]]:
                if not (before.channel.members):
                    await before.channel.delete()
                    data[str(member.guild.id)]['Selfrooms'].pop(str(before.channel.id))
            with open(f'{BD}users.json', 'w') as file:
                json.dump(data, file, indent=4)
        except:
            pass

    async def roomedit_on_button_click(self, interaction: Interaction):                     #—ç—Ç—É —Å–∞–Ω–∏–Ω—É –Ω–∞–¥–æ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å!
        stb_gld: discord.Guild = self.bot.get_guild(981511419042361344)
        if str(interaction.author.id) == bdpy(ctx=interaction)['Selfrooms'][str(interaction.author.voice.channel.id)]:
            role = bdpy(ctx=interaction)['FirstRole']
            if not(role in interaction.guild.roles):
                role = interaction.guild.roles[0]
            async def write(n):
                ow2 = discord.PermissionOverwrite()
                if not(n):
                    ow2.send_messages = False
                else:
                    ow2.send_messages = True
                await interaction.channel.set_permissions(target=interaction.author, overwrite=ow2)
            with open(f'{BD}users.json', 'r') as file:
                data = json.load(file)
                ownRoom = int(bdpy(ctx=interaction)['Selfrooms'][str(interaction.author.voice.channel.id)])

            if str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971032309403758)): #—Ç—É—Ç —Å–µ–ª–µ–∫—Ç
                await embpy(ctx=interaction, comp='n', des='–£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ @—É—á–∞—Å—Ç–Ω–∏–∫ ')
                await write(1)
                def check(msg: discord.Message):
                    return msg.author == interaction.author and msg.channel == interaction.channel and msg.author == interaction.guild.get_member(ownRoom)

                ms = await self.bot.wait_for(event='message', check=check)
                await write(0)
                data[str(interaction.guild.id)]['Selfrooms'][str(interaction.author.voice.channel.id)] = [str(i.id) for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                with open(f'{BD}users.json', 'w') as file:
                    json.dump(data, file, indent=4)
                await ms.delete()

            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971040416993280)):
                await embpy(ctx=interaction, comp='n', des='–ù–∞–ø–∏—à–∏—Ç–µ @—É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø—Ä–∞–≤–æ –≤—Ö–æ–¥–∏—Ç—å –≤ –∫–æ–º–Ω–∞—Ç—É')
                await write(1)
                def check(msg: discord.Message):
                    return msg.author == interaction.author and msg.channel == interaction.channel and msg.author == interaction.guild.get_member(ownRoom)

                ms = await self.bot.wait_for(event='message', check=check)
                await write(0)
                pr = discord.PermissionOverwrite()
                if [i for i in ms.guild.members if ms.content == i.mention and not(i.guild_permissions.administrator)][0] in interaction.guild.members: ## —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞  –≤—Å–µ —Å—Ä–∞–∑—É
                    if [i for i in ms.guild.members if ms.content == i.mention][0] in ms.author.voice.channel.members:
                        if interaction.author.voice.channel.permissions_for([i for i in ms.guild.members if ms.content == i.mention][0]).connect:
                            pr.connect = False
                            await embpy(ctx=interaction, comp='s', des=f'–£—á–∞—Å—Ç–Ω–∏–∫—É {ms.content} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ!')
                            [await i.move_to(None) for i in ms.author.voice.channel.members if ms.content == i.mention]
                        else:
                            pr.connect = True
                            await embpy(ctx=interaction, comp='s', des=f'–£—á–∞—Å—Ç–Ω–∏–∫—É {ms.content} –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ!')
                        await interaction.author.voice.channel.set_permissions(target=[i for i in ms.guild.members if ms.content == i.mention][0], overwrite=pr)
                        await ms.delete()
                    else:
                        if interaction.author.voice.channel.permissions_for([i for i in ms.guild.members if ms.content == i.mention][0]).connect:
                            pr.connect = False
                            await embpy(ctx=interaction, comp='s', des=f'–£—á–∞—Å—Ç–Ω–∏–∫—É {ms.content} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ!')
                        else:
                            pr.connect = True
                            await embpy(ctx=interaction, comp='s', des=f'–£—á–∞—Å—Ç–Ω–∏–∫—É {ms.content} –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ!')
                        await interaction.author.voice.channel.set_permissions(target=[i for i in ms.guild.members if ms.content == i.mention][0], overwrite=pr)
                        await ms.delete()
                else:
                    await embpy(ctx=interaction, comp='e', des=f'–£—á–∞—Å—Ç–Ω–∏–∫–∞ {ms.content} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
                    await ms.delete()


            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971037741043713)):
                await embpy(ctx=interaction, comp='n', des='–Ω–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç 0 –¥–æ 99')
                await write(1)
                def check(msg: discord.Message):
                    return msg.author == interaction.author and msg.channel == interaction.channel and msg.author == interaction.guild.get_member(ownRoom)

                ms = await self.bot.wait_for(event='message', check=check)
                await write(0)
                # if int(ms.content) <= 99:
                try:
                    await ms.author.voice.channel.edit(user_limit=int(ms.content))
                    await embpy(ctx=interaction, comp='s', des=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –≤ –∫–æ–º–Ω–∞—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –Ω–∞ {ms.content}')
                except TypeError:
                    await embpy(ctx=interaction, comp='e', des='–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 99')
                # else:
                    # await embpy(ctx=interaction, comp='e', des=f'–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 99')
                await ms.delete()
                

            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971036252053524)):
                fr = role
                pr = interaction.author.voice.channel.overwrites_for(fr)
                if interaction.author.voice.channel.overwrites_for(fr).connect:
                    pr.connect = False
                    await embpy(ctx=interaction, comp='s', des=f'–î–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω!')
                else:
                    pr.connect = True
                    await embpy(ctx=interaction, comp='s', des=f'–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ —Å–Ω—è—Ç–æ!')

                await interaction.author.voice.channel.set_permissions(target=fr, overwrite=pr)

            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971043856330782)):
                await embpy(ctx=interaction, comp='n', des='–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã')
                await write(1)
                def check(msg: discord.Message):
                    return msg.author == interaction.author and msg.channel == interaction.channel and msg.author == interaction.guild.get_member(ownRoom)

                ms = await self.bot.wait_for(event='message', check=check)
                await write(0)
                await ms.author.voice.channel.edit(name=f'{ms.content}')
                await ms.delete()


            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971035014746162)):
                fr = role
                pr = interaction.author.voice.channel.overwrites_for(fr)
                
                if interaction.author.voice.channel.overwrites_for(fr).view_channel:
                    pr.view_channel = False
                    await embpy(ctx=interaction, comp='s', des=f'–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∫–æ–º–Ω–∞—Ç—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω!')
                else:
                    pr.view_channel = True
                    await embpy(ctx=interaction, comp='s', des=f'–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∫–æ–º–Ω–∞—Ç—ã —Å–Ω—è—Ç–æ!')

                await interaction.author.voice.channel.set_permissions(target=fr, overwrite=pr)

            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971033756450866)): #—Å–µ–ª–µ–∫—Ç
                await embpy(ctx=interaction, comp='s', des='–Ω–∞–ø–∏—à–∏—Ç–µ @—É—á–∞—Å—Ç–Ω–∏–∫  –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≥–Ω–∞—Ç—å')
                await write(1)
                def check(msg: discord.Message):
                    return msg.author == interaction.author and msg.channel == interaction.channel and msg.author == interaction.guild.get_member(ownRoom)

                ms = await self.bot.wait_for(event='message', check=check)
                await write(0)
                [await i.move_to(None) for i in ms.author.voice.channel.members if ms.content == i.mention]
                await ms.delete()


            elif str(interaction.component.emoji) == str(await stb_gld.fetch_emoji(1020971039141920819)):  #—Å–µ–ª–µ–∫—Ç
                await embpy(ctx=interaction, comp='n', des='–Ω–∞–ø–∏—à–∏—Ç–µ @—É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø—Ä–∞–≤–æ –≥–æ–≤–æ—Ä–∏—Ç—å')
                await write(1)
                def check(msg: discord.Message):
                    return msg.author == interaction.author and msg.channel == interaction.channel and msg.author == interaction.guild.get_member(ownRoom)

                ms = await self.bot.wait_for(event='message', check=check)
                await write(0)
                pr = discord.PermissionOverwrite()
                
                if interaction.author.voice.channel.permissions_for([i for i in ms.author.voice.channel.members if ms.content == i.mention][0]).speak:
                    
                    member: discord.Member = [i for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                    if member.voice.mute == False:
                        pr.speak = False
                        await member.edit(mute = True)
                        await ms.author.voice.channel.set_permissions(target=member, overwrite=pr)
                    else:
                        await embpy(ctx=interaction, comp='e', des=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member} —É–∂–µ –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!')
                else:
                    pr.speak = True
                    member: discord.Member = [i for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                    await member.edit(mute = False)
                    
                    await ms.author.voice.channel.set_permissions(target=member, overwrite=pr)
                    
                await interaction.author.voice.channel.set_permissions(
                    target=[i for i in ms.author.voice.channel.members if ms.content == i.mention][0], overwrite=pr)
                await ms.delete()
        else:
            await embpy(ctx=interaction, comp='e', des='–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã!')


    async def listener_roomedit_start(self, interaction: Interaction):
        global rtask
        if rtask:
            rtask.cancel()
        rtask = asyncio.create_task(Roomedit(bot=self.bot).roomedit_on_button_click(interaction))

    async def listener_on_voice_state_update_roomedit_mute(self, member: discord.Member, before, after):
        try:
            Selfrooms = bdpy(ctx=member)['Selfrooms']
            if (not(after) and not(before.channel.permissions_for(member).speak) and str(before.channel.id) in [k for k in Selfrooms.keys()]) or (after.channel != before.channel and not(before.channel.permissions_for(member).speak) and str(before.channel.id) in [k for k in Selfrooms.keys()]):
                await member.edit(mute = False)
        except:
            pass
        
# class Roomeditint(interactions.Extension):
#     def __init__(self, client):
#         self.client = client
    
#     @interactions.extension_listener('on_button_click')
#     async def ddddd(self, interaction):
#         print(interaction)
#         print(dir(interaction))
#         if str(interaction.component.emoji) == 'üë•':
#             await interaction.popup(Modal(
#                             custom_id='button1',
#                             title=' ',
#                             components=[
#                                 TextInput(
#                                     style=TextStyleType.SHORT,
#                                     custom_id='qwertyuiop',
#                                     label='—á–∏—Å–ª–æ'
#                                 )
#                             ]
#                         ))

