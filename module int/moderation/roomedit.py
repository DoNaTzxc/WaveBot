import discord
from discord_components import DiscordComponents, ComponentsBot, Button, Select, SelectOption, Interaction
import interactions
from interactions import Modal, TextInput
import json
import asyncio
from discord.ext import commands
class roomedit(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    @commands.command()
    @commands.has_permissions(administrator=True)
    async def room(self, ctx):
        with open('users.json', 'r') as file:
            dataServerID = json.load(file)
            COLOR = int(dataServerID[str(ctx.author.guild.id)]['COLOR'], 16)
            ErCOLOR = int(dataServerID[str(ctx.author.guild.id)]['ErCOLOR'], 16)
            SelfRoom = int(dataServerID[str(ctx.author.guild.id)]['selfRoom'])

        emb = discord.Embed(title='***‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏***',
                            description='üëë - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã \n\
                            üóí - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å/–≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ \n\
                            üë• - –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ \n\
                            üîí - –∑–∞–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É \n\
                            ‚úèÔ∏è - –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã \n\
                            üëÅ‚Äçüó® - —Å–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É \n\
                            üö™ - –≤—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã \n\
                            üéô - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å/–≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–æ –≥–æ–≤–æ—Ä–∏—Ç—å',
                            color = COLOR)
        await ctx.send(embed=emb,
        components = [
            [
                Button(emoji = 'üëë', style=1),
                Button(emoji = 'üóí', style=1),
                Button(emoji = 'üë•', style=1),
                Button(emoji = 'üîí', style=1)
            ],
            [
                Button(emoji = '‚úèÔ∏è', style=1),
                Button(emoji = 'üëÅ‚Äçüó®', style=1),
                Button(emoji = 'üö™', style=1),
                Button(emoji = 'üéô', style=1)
            ]
        ]
    )

    @commands.Cog.listener('on_voice_state_update')
    async def ion_voice_state_update(self, a, b, c):
        try:
            with open('users.json', 'r') as file:
                dataServerID = json.load(file)
                try:
                    SelfRoom = int(dataServerID[str(b.channel.guild.id)]['selfRoom'])
                except:
                    SelfRoom = int(dataServerID[str(c.channel.guild.id)]['selfRoom'])
            try:
                if c.channel.id == SelfRoom:
                    chlen = await c.channel.guild.create_voice_channel(name = f'\./ {a.name}')
                    await a.move_to(chlen)
                    dataServerID[str(a.guild.id)]['Selfrooms'].update({
                        str(chlen.id): str(a.id)})
                with open('users.json', 'w') as file:
                    json.dump(dataServerID, file, indent=4)
            except:
                if b.channel.id == SelfRoom:
                    chlen = await c.channel.guild.create_voice_channel(name = f'\./ {a.name}')
                    await a.move_to(chlen)
            
            if b.channel.name in [i.name for i in b.channel.guild.voice_channels if i.name.startswith('\./')]:
                if not(b.channel.members):
                    await b.channel.delete()
                    dataServerID[str(a.guild.id)]['Selfrooms'].pop(str(b.channel.id))
                with open('users.json', 'w') as file:
                    json.dump(dataServerID, file, indent=4)
        except:
            pass

    @commands.Cog.listener('on_button_click')
    async def aon_button_click(self, interaction):
        with open('users.json', 'r') as file:
            dataServerID = json.load(file)
            ownRoom = int(dataServerID[str(interaction.guild.id)]['Selfrooms'][str(interaction.author.voice.channel.id)])
            SelfRoom = int(dataServerID[str(interaction.channel.guild.id)]['selfRoom'])
            print(str(interaction.component.emoji))

        if str(interaction.component.emoji) == 'üëë':
            await interaction.send('—É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ @—É—á–∞—Å—Ç–Ω–∏–∫ ')
            ms = await self.bot.wait_for(event='message')
            if ms.author == interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel:
                dataServerID[str(interaction.guild.id)]['Selfrooms'][str(interaction.author.voice.channel.id)] = [str(i.id) for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                with open('users.json', 'w') as file:
                    json.dump(dataServerID, file, indent=4)
                await ms.delete()
            else:
                while ms.author != interaction.guild.get_member(ownRoom):
                    if ms.author != interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel: continue
                    ms = await self.bot.wait_for(event='message')
                    try:
                        dataServerID[str(interaction.guild.id)]['Selfrooms'][str(interaction.author.voice.channel.id)] = \
                        [str(i.id) for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                        with open('users.json', 'w') as file:
                            json.dump(dataServerID, file, indent=4)
                    except:
                        pass
                    await ms.delete()

        elif str(interaction.component.emoji) == 'üóí':
            await interaction.send('–Ω–∞–ø–∏—à–∏—Ç–µ @—É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø—Ä–∞–≤–æ –≤—Ö–æ–¥–∏—Ç—å –≤ –∫–æ–º–Ω–∞—Ç—É')
            ms = await self.bot.wait_for(event='message')
            if ms.author == interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel:
                pr = discord.PermissionOverwrite()
                if interaction.author.voice.channel.permissions_for([i for i in ms.author.voice.channel.members if ms.content == i.mention][0]).connect:
                    pr.connect = False
                else:
                    pr.connect = True
                await interaction.author.voice.channel.set_permissions(
                    target=[i for i in ms.author.voice.channel.members if ms.content == i.mention][0], overwrite=pr)
                await ms.delete()
            else:
                while ms.author != interaction.guild.get_member(ownRoom):
                    if ms.author != interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel: continue
                    pr = discord.PermissionOverwrite()
                    try:
                        pr = discord.PermissionOverwrite()
                        if interaction.author.voice.channel.permissions_for([i for i in ms.author.voice.channel.members if ms.content == i.mention][0]).connect:
                            pr.connect = False
                        else:
                            pr.connect = True
                        await interaction.author.voice.channel.set_permissions(
                            target=[i for i in ms.author.voice.channel.members if ms.content == i.mention][0],
                            overwrite=pr)
                    except:
                        pass
                    await ms.delete()

        elif str(interaction.component.emoji) == 'üë•':
            await interaction.send('–Ω–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
            ms = await self.bot.wait_for(event='message')
            if ms.author == interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel:
                await ms.author.voice.channel.edit(user_limit=int(ms.content))
                await ms.delete()
            else:
                while ms.author != interaction.guild.get_member(ownRoom) and ms.channel != interaction.channel:
                    ms = await self.bot.wait_for(event='message')
                    if ms.author != interaction.guild.get_member(ownRoom) or ms.channel != interaction.channel: continue
                    try:
                        await ms.author.voice.channel.edit(user_limit=int(ms.content))
                    except:
                        pass
                    await ms.delete()

        elif str(interaction.component.emoji) == 'üîí':
            pr = discord.PermissionOverwrite()
            if interaction.author.voice.channel.permissions_for(interaction.guild.get_member(ownRoom)).connect:
                pr.connect = False
            else:
                pr.connect = True
            await interaction.author.voice.channel.set_permissions(target=interaction.guild.roles[0], overwrite=pr)

        elif str(interaction.component.emoji) == '‚úèÔ∏è':
            await interaction.send('–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã')
            ms = await self.bot.wait_for(event='message')
            if ms.author == interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel:
                await ms.author.voice.channel.edit(name=f'\./{ms.content}')
                await ms.delete()
            else:
                while ms.author != interaction.guild.get_member(ownRoom):
                    if ms.author != interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel: continue
                    ms = await self.bot.wait_for(event='message')
                    try:
                        await ms.author.voice.channel.edit(name=f'\./{ms.content}')
                    except:
                        pass
                    await ms.delete()

        elif str(interaction.component.emoji) == 'üëÅ‚Äçüó®':
            pr = discord.PermissionOverwrite()
            if interaction.author.voice.channel.permissions_for(interaction.guild.get_member(ownRoom)).view_channel:
                pr.view_channel = False
            else:
                pr.view_channel = True
            await interaction.author.voice.channel.set_permissions(target=interaction.guild.roles[0], overwrite=pr)

        elif str(interaction.component.emoji) == 'üö™':
            await interaction.send('–Ω–∞–ø–∏—à–∏—Ç–µ @—É—á–∞—Å—Ç–Ω–∏–∫  –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≥–Ω–∞—Ç—å')
            ms = await self.bot.wait_for(event='message')
            if ms.author == interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel:
                [await i.move_to(None) for i in ms.author.voice.channel.members if ms.content == i.mention]
                await ms.delete()
            else:
                while ms.author != interaction.guild.get_member(ownRoom):
                    if ms.author != interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel: continue
                    ms = await self.bot.wait_for(event='message')
                    try:
                        [await i.move_to(None) for i in ms.author.voice.channel.members if ms.content == i.mention]
                    except:
                        pass
                    await ms.delete()

        elif str(interaction.component.emoji) == 'üéô':
            await interaction.send('–Ω–∞–ø–∏—à–∏—Ç–µ @—É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø—Ä–∞–≤–æ –≥–æ–≤–æ—Ä–∏—Ç—å')
            ms = await self.bot.wait_for(event='message')
            if ms.author == interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel:
                pr = discord.PermissionOverwrite()
                if interaction.author.voice.channel.permissions_for([i for i in ms.author.voice.channel.members if ms.content == i.mention][0]).speak:
                    pr.speak = False
                    fthfhty = [i for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                    await fthfhty.move_to(interaction.guild.get_channel(SelfRoom))
                    await asyncio.sleep(1)
                    await fthfhty.move_to(interaction.author.voice.channel)
                else:
                    pr.speak = True
                    fthfhty = [i for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                    await fthfhty.move_to(interaction.guild.get_channel(SelfRoom))
                    await asyncio.sleep(1)
                    await fthfhty.move_to(interaction.author.voice.channel)
                await interaction.author.voice.channel.set_permissions(target=[i for i in ms.author.voice.channel.members if ms.content == i.mention][0], overwrite=pr)
                await ms.delete()
            else:
                while ms.author != interaction.guild.get_member(ownRoom):
                    if ms.author != interaction.guild.get_member(ownRoom) and ms.channel == interaction.channel: continue
                    try:
                        pr = discord.PermissionOverwrite()
                        if interaction.author.voice.channel.permissions_for([i for i in ms.author.voice.channel.members if ms.content == i.mention][0]).speak:
                            pr.speak = False
                            fthfhty = [i for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                            await fthfhty.move_to(interaction.guild.get_channel(SelfRoom))
                            await asyncio.sleep(1)
                            await fthfhty.move_to(interaction.author.voice.channel)
                        else:
                            pr.speak = True
                            fthfhty = [i for i in ms.author.voice.channel.members if ms.content == i.mention][0]
                            await fthfhty.move_to(interaction.guild.get_channel(SelfRoom))
                            await asyncio.sleep(1)
                            await fthfhty.move_to(interaction.author.voice.channel)
                        await interaction.author.voice.channel.set_permissions(
                            target=[i for i in ms.author.voice.channel.members if ms.content == i.mention][0], overwrite=pr)
                    except:
                        pass
                    await ms.delete()
def setup(bot):
    bot.add_cog(roomedit(bot))